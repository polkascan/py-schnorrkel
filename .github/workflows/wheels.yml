name: Build

on: [push, pull_request]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
#        os: [ubuntu-latest, windows-latest, macos-13, macos-14]

    env:
      CIBW_BEFORE_ALL_LINUX: "curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain nightly -y"
#      CIBW_BEFORE_ALL_WINDOWS: "choco install rustup.install; rustup default nightly"
#      CIBW_BEFORE_ALL_WINDOWS: "choco install rustup.install"
      CIBW_BEFORE_ALL_WINDOWS: "curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh"
      CIBW_BEFORE_ALL_MACOS: "curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- --default-toolchain nightly -y; source $HOME/.cargo/env"
      CIBW_ARCHS_LINUX: "auto64"
      CIBW_ENVIRONMENT: 'PATH="$PATH:$HOME/.cargo/bin"'
      CIBW_SKIP: "cp27-* cp34-* cp35-* *-musllinux_x86_64 *-musllinux_i686"

    steps:
      - uses: actions/checkout@v4

      # Used to host cibuildwheel
      - uses: actions/setup-python@v3

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.17.0

#      - name: Install Rust
#        uses: actions-rs/toolchain@v1
#        with:
#          profile: minimal
#          toolchain: nightly
#          override: true

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
#        env:
#          CIBW_BEFORE_BUILD: python -m pip install setuptools setuptools-rust==0.10.3
        # to supply options, put them in 'env', like:
        # env:
        #   CIBW_SOME_OPTION: value

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl
